name: Base Game

# Branches:
#  main    - Production, release builds
#  staging - Staging, release w/ debug info builds
#  *       - Development, debug mode builds

on: [ push, pull_request ]

jobs:
  build:
    name: Base Game - ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}

    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Windows",
            os: windows-latest,
            artifact: "BaseGame Windows"
          }
        - {
            name: "Linux",
            os: ubuntu-latest,
            artifact: "BaseGame Linux"
          }
        - {
            name: "Mac OS",
            os: macos-latest,
            artifact: "BaseGame Mac"
          }
        - {
            name: "Android",
            os: ubuntu-latest,
            artifact: "BaseGame Android",
            cmake: "-DCMAKE_SYSTEM_NAME=Android -DCMAKE_SYSTEM_VERSION=21 -DCMAKE_ANDROID_ARCH_ABI=arm64-v8a -DCMAKE_ANDROID_NDK=$ANDROID_NDK_HOME \-DCMAKE_ANDROID_STYLE_TYPE=gnustl_static"
          }
        - {
            name: "iOS",
            os: macos-latest,
            artifact: "BaseGame iOS",
            cmake: "-GXcode -DCMAKE_SYSTEM_NAME=iOS"
          }

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: recursive

    # Install pre-requisites
    - run: sudo apt-get install libgl1-mesa-dev # OpenGL
      if: matrix.config.os == 'ubuntu-latest'

    - uses: actions/setup-ndk@v1
      id: setup-ndk
      if: matrix.config.name == 'Android'
      with:
        ndk-version: r21e
        add-to-path: true

    # Configure CMake
    - name: Configure CMake [Debug]
      if: github.ref != 'refs/heads/main' && github.ref != 'refs/heads/staging'
      run: cmake -B ${{ github.workspace }}/build -DCMAKE_BUILD_TYPE=Debug ${{ matrix.config.cmake }}

    - name: Configure CMake [Release w/ Debug Info]
      if: github.ref == 'refs/heads/staging'
      run: cmake -B ${{ github.workspace }}/build -DCMAKE_BUILD_TYPE=RelWithDebInfo ${{ matrix.config.cmake }}

    - name: Configure CMake [Release]
      if: github.ref == 'refs/heads/main'
      run: cmake -B ${{ github.workspace }}/build -DCMAKE_BUILD_TYPE=Release ${{ matrix.config.cmake }}
    
    # Build project
    - name: Build [Debug]
      if: github.ref != 'refs/heads/main' && github.ref != 'refs/heads/staging'
      run: |
        cmake --build  ${{ github.workspace }}/build -t BaseGame --config Debug
        cpack --config ${{ github.workspace }}/build/CPackConfig.cmake -B ${{ github.workspace }}/package -C Debug

    - name: Build [Release w/ Debug Info]
      if: github.ref == 'refs/heads/staging'
      run: |
        cmake --build  ${{ github.workspace }}/build -t BaseGame --config RelWithDebInfo
        cpack --config ${{ github.workspace }}/build/CPackConfig.cmake -B ${{ github.workspace }}/package -C RelWithDebInfo

    - name: Build [Release]
      if: github.ref == 'refs/heads/main'
      run: |
        cmake --build  ${{ github.workspace }}/build -t BaseGame --config Release
        cpack --config ${{ github.workspace }}/build/CPackConfig.cmake -B ${{ github.workspace }}/package -C Release

    - uses: juliangruber/read-file-action@v1
      id: readFile
      with:
        path: ./Version.txt

    # Upload Artifact
    - uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.config.artifact }} ${{ steps.readFile.outputs.content }}
        path: |
          ${{ github.workspace }}/package/[Aa]qua*

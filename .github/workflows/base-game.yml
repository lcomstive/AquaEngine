name: Base Game

# Branches:
#  main    - Production, release builds
#  staging - Staging, release w/ debug info builds
#  *       - Development, debug mode builds

on: [ push, pull_request ]

jobs:
  build:
    name: Base Game - ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}

    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Windows",
            os: windows-latest,
            artifact: "BaseGame Windows"
          }
        - {
            name: "Linux",
            os: ubuntu-latest,
            artifact: "BaseGame Linux"
          }
        - {
            name: "Mac OS",
            os: macos-latest,
            artifact: "BaseGame Mac"
          }
        - {
            name: "Android",
            os: ubuntu-latest,
            artifact: "BaseGame Android",
            cmake: "-DCMAKE_SYSTEM_NAME=Android -DCMAKE_SYSTEM_VERSION=21 -DCMAKE_ANDROID_ARCH_ABI=arm64-v8a -DCMAKE_ANDROID_NDK=$ANDROID_NDK_HOME -DCMAKE_ANDROID_STL_TYPE=c++_static"
          }
        - {
            name: "iOS",
            os: macos-latest,
            artifact: "BaseGame iOS",
            cmake: "-GXcode -DCMAKE_SYSTEM_NAME=iOS -DCODE_SIGN_IDENTITY=\"iPhone Distribution\" -DDEVELOPMENT_TEAM=\"${{ secrets.IOS_TEAM_ID }}\" -DPRODUCT_BUNDLE_IDENTIFIER=\"com.madissia.BaseGame\""
          }

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: recursive

    # Install pre-requisites
    - if: matrix.config.os == 'ubuntu-latest'
      run: sudo apt-get install libgl1-mesa-dev # OpenGL

    - if: matrix.config.name == 'Android'
      run: sudo apt-get install libx11-dev libxss-dev libxxf86vm-dev libxkbfile-dev libxv-dev

    - if: matrix.config.name == 'Android'
      uses: nttld/setup-ndk@v1
      id: setup-ndk
      with:
        ndk-version: r21e
        add-to-path: true

    # Configure CMake
    - name: Configure CMake [Debug]
      if: github.ref != 'refs/heads/main' && github.ref != 'refs/heads/staging'
      run: cmake -B ${{ github.workspace }}/build -DCMAKE_BUILD_TYPE=Debug ${{ matrix.config.cmake }}

    - name: Configure CMake [Release w/ Debug Info]
      if: github.ref == 'refs/heads/staging'
      run: cmake -B ${{ github.workspace }}/build -DCMAKE_BUILD_TYPE=RelWithDebInfo ${{ matrix.config.cmake }}

    - name: Configure CMake [Release]
      if: github.ref == 'refs/heads/main'
      run: cmake -B ${{ github.workspace }}/build -DCMAKE_BUILD_TYPE=Release ${{ matrix.config.cmake }}
    
    # Build project
    - name: Build [Debug]
      if: github.ref != 'refs/heads/main' && github.ref != 'refs/heads/staging'
      run: cmake --build  ${{ github.workspace }}/build -t BaseGame --config Debug

    - name: Build [Release w/ Debug Info]
      if: github.ref == 'refs/heads/staging'
      run: cmake --build  ${{ github.workspace }}/build -t BaseGame --config RelWithDebInfo

    - name: Build [Release]
      if: github.ref == 'refs/heads/main'
      run: cmake --build  ${{ github.workspace }}/build -t BaseGame --config Release

    - uses: juliangruber/read-file-action@v1
      id: readFile
      with:
        path: ./Version.txt

    # Upload Artifact
    - uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.config.artifact }} ${{ steps.readFile.outputs.content }}
        path: ${{ github.workspace }}/build/bin/*

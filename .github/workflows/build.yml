name: Aqua Engine

# Branches:
#  main    - Production, release builds
#  staging - Staging, release w/ debug info builds
#  *       - Development, debug mode builds

on: [ push, pull_request ]

jobs:
  build:
    name: Aqua Engine - ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}

    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Windows",
            os: windows-latest,
            artifact: "AquaEngine Windows"
          }
        - {
            name: "Linux",
            os: ubuntu-latest,
            artifact: "AquaEngine Linux"
          }
        - {
            name: "Mac OS",
            os: macos-latest,
            artifact: "AquaEngine Mac"
          }

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: recursive

    # Configure CMake
    - name: Configure CMake [Debug]
      if: github.ref != 'refs/heads/main' && github.ref != 'refs/heads/staging'
      run: cmake -B ${{ github.workspace }}/build -DCMAKE_BUILD_TYPE=Debug

    - name: Configure CMake [Release w/ Debug Info]
      if: github.ref == 'refs/heads/staging'
      run: cmake -B ${{ github.workspace }}/build -DCMAKE_BUILD_TYPE=RelWithDebInfo

    - name: Configure CMake [Release]
      if: github.ref == 'refs/heads/main'
      run: cmake -B ${{ github.workspace }}/build -DCMAKE_BUILD_TYPE=Release
    
    # Build project
    - name: Build [Debug]
      if: github.ref != 'refs/heads/main' && github.ref != 'refs/heads/staging'
      run: |
        cmake --build  ${{ github.workspace }}/build --config Debug; \
        cpack --config ${{ github.workspace }}/build/CPackConfig.cmake -B ${{ github.workspace }}/package -C Debug

    - name: Build [Release w/ Debug Info]
      if: github.ref == 'refs/heads/staging'
      run: |
        cmake --build  ${{ github.workspace }}/build --config RelWithDebInfo; \
        cpack --config ${{ github.workspace }}/build/CPackConfig.cmake -B ${{ github.workspace }}/package -C RelWithDebInfo

    - name: Build [Release]
      if: github.ref == 'refs/heads/main'
      run: |
        cmake --build  ${{ github.workspace }}/build --config Release; \
        cpack --config ${{ github.workspace }}/build/CPackConfig.cmake -B ${{ github.workspace }}/package -C Release

    - uses: juliangruber/read-file-action@v1
      id: readFile
      with:
        path: ./Version.txt

    # Upload Artifact
    - uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.config.artifact }} ${{ steps.readFile.outputs.content }}
        path: ${{ github.workspace }}/package
